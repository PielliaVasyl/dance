# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-07 12:12
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DanceClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('first_lesson_free', models.BooleanField(default=False)),
                ('free_lesson_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('every_first_lesson_free', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('end_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='DanceStudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, upload_to='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='DanceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('note', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('PL', 'Заплонировано'), ('DN', 'Отменено'), ('PP', 'Перенесено'), ('HL', 'Проведено')], default='PL', max_length=2)),
                ('start_date', models.DateField(blank=True, default=datetime.date.today)),
                ('end_date', models.DateField(blank=True, default=datetime.date.today)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('updated',),
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('link',),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WeekDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(blank=True, choices=[('MON', 'Понедельник'), ('TUE', 'Вторник'), ('WED', 'Среда'), ('THU', 'Четверг'), ('FRI', 'Пятница'), ('SAT', 'Суббота'), ('SUN', 'Воскресенье')], max_length=3)),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='location',
            name='dance_types',
            field=models.ManyToManyField(blank=True, to='entities.DanceType'),
        ),
        migrations.AddField(
            model_name='link',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='instructor',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='instructor',
            name='dance_types',
            field=models.ManyToManyField(blank=True, to='entities.DanceType'),
        ),
        migrations.AddField(
            model_name='instructor',
            name='events',
            field=models.ManyToManyField(blank=True, to='entities.Event'),
        ),
        migrations.AddField(
            model_name='instructor',
            name='links',
            field=models.ManyToManyField(blank=True, to='entities.Link'),
        ),
        migrations.AddField(
            model_name='eventtype',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='event',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='event',
            name='dance_types',
            field=models.ManyToManyField(blank=True, to='entities.DanceType'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_types',
            field=models.ManyToManyField(blank=True, to='entities.EventType'),
        ),
        migrations.AddField(
            model_name='event',
            name='links',
            field=models.ManyToManyField(blank=True, to='entities.Link'),
        ),
        migrations.AddField(
            model_name='event',
            name='locations',
            field=models.ManyToManyField(blank=True, to='entities.Location'),
        ),
        migrations.AddField(
            model_name='dancetype',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='dancestudio',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='dancestudio',
            name='dance_types',
            field=models.ManyToManyField(blank=True, to='entities.DanceType'),
        ),
        migrations.AddField(
            model_name='dancestudio',
            name='instructors',
            field=models.ManyToManyField(blank=True, to='entities.Instructor'),
        ),
        migrations.AddField(
            model_name='dancestudio',
            name='links',
            field=models.ManyToManyField(blank=True, to='entities.Link'),
        ),
        migrations.AddField(
            model_name='dancestudio',
            name='locations',
            field=models.ManyToManyField(blank=True, to='entities.Location'),
        ),
        migrations.AddField(
            model_name='danceclass',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='danceclass',
            name='dance_studio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.DanceStudio'),
        ),
        migrations.AddField(
            model_name='danceclass',
            name='dance_types',
            field=models.ManyToManyField(blank=True, to='entities.DanceType'),
        ),
        migrations.AddField(
            model_name='danceclass',
            name='instructors',
            field=models.ManyToManyField(blank=True, to='entities.Instructor'),
        ),
        migrations.AddField(
            model_name='danceclass',
            name='links',
            field=models.ManyToManyField(blank=True, to='entities.Link'),
        ),
        migrations.AddField(
            model_name='danceclass',
            name='schedule_week_days',
            field=models.ManyToManyField(blank=True, to='entities.WeekDay'),
        ),
    ]
